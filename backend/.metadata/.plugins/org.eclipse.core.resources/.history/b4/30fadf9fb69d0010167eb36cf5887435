package com.certification.config;

import com.certification.model.*;
import com.certification.repository.*;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
public class DataInitializer {

	@Bean
	public CommandLineRunner seedData(
	        CertificationRepository certs,
	        UserRepository users,
	        PasswordEncoder encoder
	) {
	    return args -> {
	        if (certs.count() == 0) {
	            certs.save(Certification.builder()
	                    .name("AWS Certified Cloud Practitioner")
	                    .authority("Amazon Web Services")
	                    .category("Cloud")
	                    .validityMonths(36)
	                    .prerequisites("Basic cloud knowledge")
	                    .build());

	            certs.save(Certification.builder()
	                    .name("Microsoft Azure Fundamentals (AZ-900)")
	                    .authority("Microsoft")
	                    .category("Cloud")
	                    .validityMonths(36)
	                    .prerequisites("Basic Azure knowledge")
	                    .build());

	            certs.save(Certification.builder()
	                    .name("Oracle Java SE 11 Developer")
	                    .authority("Oracle")
	                    .category("Programming")
	                    .validityMonths(36)
	                    .prerequisites("Strong Java basics")
	                    .build());
	        }

	        if (users.count() == 0) {
	            users.save(User.builder()
	                    .username("admin")
	                    .name("Admin User")
	                    .email("admin@company.com")
	                    .password(encoder.encode("Admin@123"))
	                    .role(Role.ADMIN)
	                    .build());

	            users.save(User.builder()
	                    .username("employee")
	                    .name("Employee One")
	                    .email("employee@company.com")
	                    .password(encoder.encode("Employee@123"))
	                    .role(Role.EMPLOYEE)
	                    .build());

	            users.save(User.builder()
	                    .username("approver")
	                    .name("Approver SPOC")
	                    .email("approver@company.com")
	                    .password(encoder.encode("Approver@123"))
	                    .role(Role.APPROVER)
	                    .build());

	            users.save(User.builder()
	                    .username("manager")
	                    .name("Manager One")
	                    .email("manager@company.com")
	                    .password(encoder.encode("Manager@123"))
	                    .role(Role.MANAGER)
	                    .build());
	        }
	    };
	}
}
